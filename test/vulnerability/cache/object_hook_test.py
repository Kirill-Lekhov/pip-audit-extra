from pip_audit_extra.vulnerability.cache.object_hook import JSONObjectHook
from pip_audit_extra.vulnerability.cache.type import VulnerabilityData

from datetime import datetime, timezone


class TestJSONObjectHook:
	def test___call__(self):
		hook = JSONObjectHook()

		assert hook([]) == []
		assert hook("TEST") == "TEST"
		assert hook(10) == 10
		assert hook({}) == {}

		vuln_data = hook({
			"id": "ID.1",
			"fix_versions": ["FIX_VER.1", "FIX_VER.2"],
			"severity": "LOW",
		})
		assert isinstance(vuln_data, VulnerabilityData)
		assert vuln_data.id == "ID.1"
		assert vuln_data.fix_versions == ["FIX_VER.1", "FIX_VER.2"]
		assert vuln_data.severity == "LOW"

		record = hook({
			"updated_at": "2024-06-12T09:10:11+00:00",
			"data": {
				"id": "GHSA-0000-0000-0000",
				"fix_versions": ["0.0.0"],
				"severity": "HIGH",
			},
		})
		assert isinstance(record, dict)
		assert set(record.keys()) == {"updated_at", "data"}
		assert record["updated_at"] == datetime(2024, 6, 12, 9, 10, 11, tzinfo=timezone.utc)
		assert isinstance(record["data"], dict)
		assert record["data"]["id"] == "GHSA-0000-0000-0000"
		assert record["data"]["fix_versions"] == ["0.0.0"]
		assert record["data"]["severity"] == "HIGH"
